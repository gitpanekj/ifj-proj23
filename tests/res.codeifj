.IFJcode23
JUMP main

#////////////////// BUILT-IN FUNCTIONS ///////////////////

LABEL func_readString  #////////////////// readString ///////////////////
PUSHFRAME

DEFVAR LF@result
READ LF@result string

PUSHS LF@result

POPFRAME
RETURN

LABEL func_readDouble  #////////////////// readDouble ///////////////////
PUSHFRAME

DEFVAR LF@result
READ LF@result float

PUSHS LF@result

POPFRAME
RETURN

LABEL func_readInt  #////////////////// readInt ///////////////////
PUSHFRAME

DEFVAR LF@result
READ LF@result int

PUSHS LF@result

POPFRAME
RETURN

LABEL func_Int2Double  #////////////////// Int2Double ///////////////////
PUSHFRAME

DEFVAR LF@result
INT2FLOAT LF@result LF@_0

PUSHS LF@result

POPFRAME
RETURN

LABEL func_Double2Int  #////////////////// Double2Int ///////////////////
PUSHFRAME

DEFVAR LF@result
FLOAT2INT LF@result LF@_0

PUSHS LF@result

POPFRAME
RETURN

LABEL func_length  #////////////////// length ///////////////////
PUSHFRAME

DEFVAR LF@result

STRLEN LF@result LF@_0

PUSHS LF@result

POPFRAME
RETURN

LABEL func_substring  #////////////////// substring ///////////////////
PUSHFRAME

#  1 string
#  2 start
#  3 end before

DEFVAR LF@result
DEFVAR LF@if
DEFVAR LF@length
DEFVAR LF@tempChar
DEFVAR LF@index

MOVE LF@index int@0                         # index vysledku na 0

LT LF@if LF@_1 int@0                        # start < 0
JUMPIFEQ substringError LF@if bool@true
LT LF@if LF@_2 int@0                        # end < 0
JUMPIFEQ substringError LF@if bool@true
GT LF@if LF@_1 LF@_2                        # start > end
JUMPIFEQ substringError LF@if bool@true

CREATEFRAME
DEFVAR TF@_0
MOVE TF@_0 LF@_0
CALL func_length
move LF@length TF@result

GT LF@if LF@_2 LF@length                    # end > length
JUMPIFEQ substringError LF@if bool@true
GT LF@if LF@_1 LF@length                    # start > length
JUMPIFEQ substringError LF@if bool@true
EQ LF@if LF@_1 LF@length                    # start == length
JUMPIFEQ substringError LF@if bool@true

MOVE LF@result string@

LABEL substringLoop
GETCHAR LF@tempChar LF@_0 LF@_1
CONCAT LF@result LF@result LF@tempChar

ADD LF@_1 LF@_1 int@1
ADD LF@index LF@index int@1

EQ LF@if LF@_1 LF@_2
JUMPIFEQ substringEnd LF@if bool@true
JUMP substringLoop

LABEL substringError
move LF@result nil@nil

LABEL substringEnd

PUSHS LF@result

POPFRAME
RETURN

LABEL func_ord  #////////////////// ord ///////////////////
PUSHFRAME

DEFVAR LF@result
DEFVAR LF@length

CREATEFRAME
DEFVAR TF@_0
MOVE TF@_0 LF@_0
CALL func_length
MOVE LF@length TF@result

JUMPIFEQ ordEnd0 LF@length int@0

STRI2INT LF@result LF@_0 int@0
JUMP ordEnd

LABEL ordEnd0
MOVE LF@result int@0

LABEL ordEnd

PUSHS LF@result

POPFRAME
RETURN

LABEL func_chr  #////////////////// chr ///////////////////
PUSHFRAME

DEFVAR LF@result
INT2CHAR LF@result LF@_0

PUSHS LF@result

POPFRAME
RETURN


LABEL main   #///////////////////////////// MAIN ////////////////
CREATEFRAME
DEFVAR GF@tempIfVar
DEFVAR GF@precedenceMatTemp
DEFVAR GF@!!tmpNILConsOP1!!
DEFVAR GF@!!tmpNILConsOP2!!
DEFVAR GF@precedenceConcatFirst
DEFVAR GF@precedenceConcatSecond


JUMP skipFunction1
LABEL func_test
PUSHFRAME
DEFVAR LF@ddd_1
MOVE LF@ddd_1 LF@_0
DEFVAR LF@dd_1
MOVE LF@dd_1 LF@_2
WRITE LF@ddd_1
WRITE string@\010
WRITE LF@dd_1
WRITE string@\010
JUMP endOfFunc1
LABEL endOfFunc1
POPFRAME
RETURN
LABEL skipFunction1
JUMP skipFunction2
LABEL func_test2
PUSHFRAME
DEFVAR LF@ddd_3
MOVE LF@ddd_3 LF@_0
DEFVAR LF@dd_3
MOVE LF@dd_3 LF@_2
WRITE LF@ddd_3
WRITE string@\010
WRITE LF@dd_3
WRITE string@\010
JUMP endOfFunc2
LABEL endOfFunc2
POPFRAME
RETURN
LABEL skipFunction2
CREATEFRAME
DEFVAR TF@_0
MOVE TF@_0 string@asd
DEFVAR TF@_1
MOVE TF@_1 string@asd
DEFVAR TF@_2
MOVE TF@_2 int@5
CALL func_test
CLEARS
